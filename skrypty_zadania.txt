-- task 4

!/bin/bash

#This is my first task from course!

SENTENCE="If cats could talk,they wouldn't"

echo $SENTENCE

exit 0
2

--task 5
#!/bin/bash
INPUT_DIR=/tmp/ftp_data
OUTPUT_DIR=/tmp/monitor_arch

echo "Starting moving files from $INPUT_DIR to $OUTPUT_DIR"

mv $INPUT_DIR/* $OUTPUT_DIR

echo "done"

exit 0

--task 7
cat > config.sh
export FILE_NAME=news.xml
export WWW_ADDRESS=http://feeds.bbci.co.uk/news/world/rss.xml

nano lab_7.sh

#!/bin/bash

source ./config.sh

echo "Downloading $WWW_ADDRESS to $FILE_NAME"

wget --quiet --output-document=$FILE_NAME $WWW_ADDRESS

echo "Done"

exit 0


nano lab_8.sh

#!/bin/bash

FILE=356
FREE_FILE_SYSTEM=220
COMPRESSPERCENT=60

NEW_FILE=$((FILE*COMPRESSPERCENT/100))


echo $NEW_FILE

echo $((NEW_FILE>FREE_FILE_SYSTEM))

echo ==========================

FILE=356
FREE_FILE_SYSTEM=220
COMPRESSPERCENT=60

NEW_FILE=$(((FILE*COMPRESSPERCENT/100)+10))


echo $NEW_FILE

echo $((NEW_FILE>FREE_FILE_SYSTEM))

exit 0

nano lab_10.sh
#!/bin/bash

date
hostname
who

exit 0


=========================
lab 13


LIMIT=16
AVERAGE=10
PEAK=20
USED=15

[ $USED -lt $LIMIT ]
[ $USED -ge $AVERAGE ]
[ $USED -gt $PEAK ]
[ $USED -lt $LIMIT -a $USED -gt $AVERAGE ]


 [ -d $MEDIA ]
[ -f $TMPLOC ]

==========================
lab_14 
#!/bin/bash

USER=mat
GROUP=DEV
FILE=/tmp/output.txt

if [[ -z $USER || -z $GROUP ]] ; then
        echo "USER and GROUP cannot be empty"
        exit 11
fi

if [[ -f $FILE ]]; then
        echo "Changing permissions to file"
        sudo chown $USER:$GROUP $FILE
elif [[ -d $FILE ]]; then
        echo "Changing permissions to directory"
        sudo chown -R $USER:$GROUP $FILE
else
        echo "The FILE is incorrect"
        exit 12
fi

exit 0

========================
lab_16
[ ! -d /tmp/workdir ] && mkdir /tmp/workdir [ -d /tmp/workdir ] || mkdir /tmp/workdir [ -f /tmp/stop.txt ] && echo "Cannot continue" && exit 1

========================
lab_18 
#!/bin/bash 
DIR=/var/log 
for m in $DIR/*; do 
	echo $m 
done 
exit 0


#!/bin/bash 
FILE=/etc/fstab 
IFS='' 
for line in $(cat $FILE); do 
	echo "$line" 
done 
exit 0 


#!/bin/bash
for i in {1..10}; do 
	echo "$i $(( $i * $i ))" 
done 
exit 0




